[{"/Users/pouyan/Documents/Web-design/recipefinder/client/src/index.js":"1","/Users/pouyan/Documents/Web-design/recipefinder/client/src/App.js":"2","/Users/pouyan/Documents/Web-design/recipefinder/client/src/serviceWorker.js":"3","/Users/pouyan/Documents/Web-design/recipefinder/client/src/Header.js":"4","/Users/pouyan/Documents/Web-design/recipefinder/client/src/ResultItem.js":"5"},{"size":463,"mtime":1608418222387,"results":"6","hashOfConfig":"7"},{"size":218,"mtime":1609703768576,"results":"8","hashOfConfig":"7"},{"size":5083,"mtime":1608418222388,"results":"9","hashOfConfig":"7"},{"size":1426,"mtime":1609036470875,"results":"10","hashOfConfig":"7"},{"size":665,"mtime":1609704659695,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"k9s9jc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pouyan/Documents/Web-design/recipefinder/client/src/index.js",[],["24","25"],"/Users/pouyan/Documents/Web-design/recipefinder/client/src/App.js",[],"/Users/pouyan/Documents/Web-design/recipefinder/client/src/serviceWorker.js",[],"/Users/pouyan/Documents/Web-design/recipefinder/client/src/Header.js",["26"],"import React, {useState, useEffect} from 'react';\r\nimport './Header.css';\r\nimport ResultItem from './ResultItem';\r\nexport default function Header() {\r\n\r\n  const baseURL= 'https://api.edamam.com';\r\n  const api_key = '51c012775148e57fcc2f5da41fc1c75d';\r\n  const app_id = '507e29f3';\r\n  const search = `/search`;\r\n  \r\n  \r\n  const [recipes, setRecipes] = useState([]);\r\n  const [value, setValue] = useState('');\r\n\r\n  const changeHandler = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const submitForm = (e)=>{\r\n    e.preventDefault();\r\n    \r\n    fetch(`${baseURL}${search}?q=${value}&app_id=${app_id}&app_key=${api_key}`)\r\n      .then(res=>res.json())\r\n      .then(data => setRecipes(data.hits));\r\n  }\r\n   \r\n      return (\r\n        <div className=\"header\">\r\n          <h1 className=\"header__title\">Food Finder</h1>\r\n              <form className=\"search-form\" onSubmit={submitForm}>\r\n                  <div className='search-form__bar'>\r\n                      <input \r\n                        type=\"text\" \r\n                        name=\"ingredients\"\r\n                        value={value}\r\n                        onChange={e => changeHandler(e)}>\r\n                      </input>\r\n                      <button type=\"submit\">Search</button>\r\n                  </div>\r\n              </form>\r\n              {recipes.map(item => \r\n                <ResultItem recipe={item.recipe}/>\r\n              )}\r\n        </div>\r\n      )  \r\n}","/Users/pouyan/Documents/Web-design/recipefinder/client/src/ResultItem.js",["27","28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":26,"nodeType":"36","messageId":"37","endLine":1,"endColumn":35},{"ruleId":"38","severity":1,"message":"39","line":9,"column":30,"nodeType":"40","endLine":9,"endColumn":45},{"ruleId":"41","severity":1,"message":"42","line":10,"column":11,"nodeType":"43","endLine":10,"endColumn":62},{"ruleId":"38","severity":1,"message":"39","line":18,"column":30,"nodeType":"40","endLine":18,"endColumn":45},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]